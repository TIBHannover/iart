version: "2.0"
services:
  indexer:
    image: iart/indexer
    build:
      context: ./indexer

    network_mode: "host"
    volumes:
      - type: bind
        # TODO change path
        source: ./data/
        target: /data/
      - type: bind
        source: ./indexer/
        target: /indexer/


    working_dir: /indexer/src/iart_indexer
    environment:
      - POETRY_VIRTUALENVS_CREATE=False
      - PYTHONPATH=/indexer/src/
    command: python3 -m iart_indexer --mode server -v -c /indexer/config.json

  faiss_indexer:
    image: iart/indexer
    build:
      context: ./indexer

    network_mode: "host"
    volumes:
      - type: bind
        # TODO change path
        source: ./data/
        target: /data/
      - type: bind
        source: ./indexer/
        target: /indexer/
      
    working_dir: /indexer/src/iart_indexer
    environment:
      - POETRY_VIRTUALENVS_CREATE=False
      - PYTHONPATH=/indexer/src/
    command: python3 -m iart_indexer --mode faiss_server -v -c /indexer/config.json
  redisai:
    image:  redislabs/redisai:edge-cpu-bionic
    network_mode: "host"

  elasticsearch:
    image: elasticsearch:7.9.1

    network_mode: "host"
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node

    volumes:
      - type: bind
        # TODO change path
        source: ./data/elasticsearch/
        target: /usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65530
        hard: 65530

  postgres:
    image: postgres:13.2
    network_mode: "host"
    volumes:
      - ./data/db/:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=iart
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/var/lib/postgresql/data/data/


  memcached:
    image: memcached:1.6.10-buster
    network_mode: "host"
    command: -I 32m

  backend:
    image: iart/backend
    build:
      context: ./backend

    network_mode: "host"
    volumes:
      - type: bind
        # TODO change path
        source: ./data/
        target: /data
      # Development mount
      - type: bind
        source: ./backend/
        target: /backend

    working_dir: /backend/src/iart_web
    environment:
      - POETRY_VIRTUALENVS_CREATE=False
      - PYTHONPATH=/backend/src/
    command: python3 manage.py runserver  0.0.0.0:8000

    depends_on:
      - postgres
      - memcached

  celery:
    image: iart/backend
    build:
      context: ./backend

    network_mode: "host"
    volumes:
      - type: bind
        # TODO change path
        source: ./data/
        target: /data
      # Development mount
      - type: bind
        source: ./backend/
        target: /backend

    working_dir: /backend/src/iart_web
    environment:
      - POETRY_VIRTUALENVS_CREATE=False
      - PYTHONPATH=/backend/src/
    command: celery -A iart worker -l INFO

    depends_on:
      - postgres
      - memcached
    

  frontend:
    image: iart/frontend
    build:
      context: ./frontend

    volumes:
      - type: bind
        source: ./frontend/
        target: /frontend
      - type: bind
        # TODO change path
        source: ./data/
        target: /data

    working_dir: /frontend
    network_mode: "host"
