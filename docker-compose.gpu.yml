version: "2.0"

services:
  indexer:
    image: iart/indexer
    build:
      context: ./indexer
    network_mode: "host"
    volumes:
      - type: bind
        source: ./data/
        target: /data/
      - type: bind
        source: ./indexer/
        target: /indexer/
    working_dir: /indexer/src/iart_indexer
    environment:
      - POETRY_VIRTUALENVS_CREATE=False
      - PYTHONPATH=/indexer/src/
    command: python3 -m iart_indexer --mode server -v -c /indexer/config.gpu.json

  faiss_indexer:
    image: iart/indexer
    build:
      context: ./indexer
    network_mode: "host"
    volumes:
      - type: bind
        source: ./data/
        target: /data/
      - type: bind
        source: ./indexer/
        target: /indexer/
    working_dir: /indexer/src/iart_indexer
    environment:
      - POETRY_VIRTUALENVS_CREATE=False
      - PYTHONPATH=/indexer/src/
    command: python3 -m iart_indexer --mode faiss_server -v -c /indexer/config.gpu.json

  redisai:
    image: redislabs/redisai:1.2.3-gpu-xenial
    ports:
      - "127.0.0.1:6379:6379"
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [ gpu ]

  elasticsearch:
    image: elasticsearch:7.9.1
    volumes:
      - type: bind
        source: ./data/elasticsearch/
        target: /usr/share/elasticsearch/data
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65530
        hard: 65530
    ports:
      - "127.0.0.1:9300:9300"
      - "127.0.0.1:9200:9200"

  postgres:
    image: postgres:13.2
    volumes:
      - ./data/db/:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=iart
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/var/lib/postgresql/data/data/
    ports:
      - "127.0.0.1:5432:5432"

  memcached:
    image: memcached:1.6.10-buster
    command: -I 32m
    ports:
      - "127.0.0.1:11211:11211"

  backend:
    image: iart/backend
    build:
      context: ./backend
    network_mode: "host"
    volumes:
      - type: bind
        source: ./data/
        target: /data
      # Development mount
      - type: bind
        source: ./backend/
        target: /backend
    working_dir: /backend/src/iart_backend
    environment:
      - POETRY_VIRTUALENVS_CREATE=False
      - PYTHONPATH=/backend/src/
    command: python3 manage.py runserver 0.0.0.0:8000
    depends_on:
      - postgres
      - memcached

  celery:
    image: iart/backend
    build:
      context: ./backend
    network_mode: "host"
    volumes:
      - type: bind
        source: ./data/
        target: /data
      # Development mount
      - type: bind
        source: ./backend/
        target: /backend
    working_dir: /backend/src/iart_backend
    environment:
      - POETRY_VIRTUALENVS_CREATE=False
      - PYTHONPATH=/backend/src/
    command: celery -A iart worker -l INFO
    depends_on:
      - postgres
      - memcached

  frontend:
    image: iart/frontend
    build:
      context: ./frontend
    network_mode: "host"
    volumes:
      - type: bind
        source: ./frontend/
        target: /frontend
      - type: bind
        source: ./data/
        target: /data
    working_dir: /frontend
